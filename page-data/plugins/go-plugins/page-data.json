{"componentChunkName":"component---src-rocketseat-gatsby-theme-docs-src-templates-docs-query-js","path":"/plugins/go-plugins/","result":{"data":{"mdx":{"id":"00e1ca07-1281-5a5f-a1be-02f4177eb548","excerpt":"Private linters can be added through  Go's plugin system . For a private linter (which acts as a plugin) to work properly,\nthe plugin as well as the golangciâ€¦","fields":{"slug":"/plugins/go-plugins/"},"frontmatter":{"title":"Go Plugin System","description":null,"image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Go Plugin System\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Private linters can be added through \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://pkg.go.dev/plugin\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }, \"Go's plugin system\"), \".\"), mdx(\"p\", null, \"For a private linter (which acts as a plugin) to work properly,\\nthe plugin as well as the golangci-lint binary \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"needs to be built for the same environment\"), \".\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CGO_ENABLED\"), \" is another requirement.\"), mdx(\"p\", null, \"This means that \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"golangci-lint\"), \" needs to be built for whatever machine you intend to run it on\\n(cloning the golangci-lint repository and running a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CGO_ENABLED=1 make build\"), \" should do the trick for your machine).\"), mdx(\"h2\", {\n    \"id\": \"create-a-plugin\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#create-a-plugin\",\n    \"aria-label\": \"create a plugin permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Create a Plugin\"), mdx(\"p\", null, \"Your linter must provide one or more \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"golang.org/x/tools/go/analysis.Analyzer\"), \" structs.\"), mdx(\"p\", null, \"Your project should also use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"go.mod\"), \".\"), mdx(\"p\", null, \"All versions of libraries that overlap \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"golangci-lint\"), \" (including replaced libraries) MUST be set to the same version as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"golangci-lint\"), \".\\nYou can see the versions by running \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"go version -m golangci-lint\"), \".\"), mdx(\"p\", null, \"You'll also need to create a Go file like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"plugin/example.go\"), \".\"), mdx(\"p\", null, \"This file MUST be in the package \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"main\"), \", and MUST define an exposed function called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"New\"), \" with the following signature:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"func New(conf any) ([]*analysis.Analyzer, error) {\\n    // ...\\n}\\n\")), mdx(\"p\", null, \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/golangci/example-plugin-linter/blob/master/plugin/example.go\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }, \"plugin/example.go\"), \" for more info.\"), mdx(\"p\", null, \"To build the plugin, from the root project directory, run:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"go build -buildmode=plugin plugin/example.go\\n\")), mdx(\"p\", null, \"This will create a plugin \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"*.so\"), \" file that can be copied into your project or another well known location for usage in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"golangci-lint\"), \".\"), mdx(\"h2\", {\n    \"id\": \"configure-a-plugin\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#configure-a-plugin\",\n    \"aria-label\": \"configure a plugin permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Configure a Plugin\"), mdx(\"p\", null, \"If you already have a linter plugin available, you can follow these steps to define its usage in a projects \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".golangci.yml\"), \" file.\"), mdx(\"p\", null, \"An example linter can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/golangci/example-plugin-linter\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }, \"here\"), \".\"), mdx(\"p\", null, \"If you're looking for instructions on how to configure your own custom linter, they can be found further down.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"If the project you want to lint does not have one already, copy the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/golangci/golangci-lint/blob/master/.golangci.yml\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }, \".golangci.yml\"), \" to the root directory.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Adjust the yaml to appropriate \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"linters-settings.custom\"), \" entries as so:\", mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\",\n    \"metastring\": \"title=.golangci.yml\",\n    \"title\": \".golangci.yml\"\n  }, \"linters-settings:\\n  custom:\\n    example:\\n      path: /example.so\\n      description: The description of the linter\\n      original-url: github.com/golangci/example-linter\\n      settings: # Settings are optional.\\n        one: Foo\\n        two:\\n          - name: Bar\\n        three:\\n          name: Bar\\n\")))), mdx(\"p\", null, \"That is all the configuration that is required to run a custom linter in your project.\"), mdx(\"p\", null, \"Custom linters are enabled by default, but abide by the same rules as other linters.\"), mdx(\"p\", null, \"If the disable all option is specified either on command line or in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".golang.yml\"), \" files \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"linters.disable-all: true\"), \", custom linters will be disabled;\\nthey can be re-enabled by adding them to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"linters.enable\"), \" list,\\nor providing the enabled option on the command line, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"golangci-lint run -Eexample\"), \".\"), mdx(\"p\", null, \"The configuration inside the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"settings\"), \" field of linter have some limitations (there are NOT related to the plugin system itself):\\nwe use Viper to handle the configuration but Viper put all the keys in lowercase, and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".\"), \" cannot be used inside a key.\"));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Create a Plugin"},{"depth":2,"value":"Configure a Plugin"}]}},"pageContext":{"slug":"/plugins/go-plugins/","prev":{"label":"Module Plugin System","link":"/plugins/module-plugins/"},"githubEditUrl":"https://github.com/golangci/golangci-lint/tree/master/docs/src/docs/plugins/go-plugins.mdx"}},"staticQueryHashes":["1954253342","2360221584","2501019404","2679457992"]}