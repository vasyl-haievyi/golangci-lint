{"componentChunkName":"component---src-rocketseat-gatsby-theme-docs-src-templates-docs-query-js","path":"/product/performance/","result":{"data":{"mdx":{"id":"22db2071-879e-52b2-a284-41e79533929b","excerpt":"Memory Usage A trade-off between memory usage and execution time can be controlled by  GOGC  environment variable.\nLess  GOGC  values trigger garbage collectionâ€¦","fields":{"slug":"/product/performance/"},"frontmatter":{"title":"Performance","description":null,"image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Performance\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"memory-usage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#memory-usage\",\n    \"aria-label\": \"memory usage permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Memory Usage\"), mdx(\"p\", null, \"A trade-off between memory usage and execution time can be controlled by \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://pkg.go.dev/runtime#hdr-Environment_Variables\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"GOGC\")), \" environment variable.\\nLess \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GOGC\"), \" values trigger garbage collection more frequently and golangci-lint consumes less memory and more CPU. Below is the trade-off table for running on this repo:\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"th\"\n  }, \"GOGC\")), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Peak Memory, GB\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Execution Time, s\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"5\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1.1\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"60\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"10\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1.1\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"34\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"20\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1.3\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"25\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"30\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1.6\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"20.2\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"50\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2.0\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"17.1\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"80\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2.2\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"14.1\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"100\"), \" (default)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2.2\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"13.8\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"off\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"3.2\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"9.3\")))), mdx(\"h2\", {\n    \"id\": \"why-golangci-lint-is-so-fast\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#why-golangci-lint-is-so-fast\",\n    \"aria-label\": \"why golangci lint is so fast permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Why \", mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"golangci-lint\"), \" is so fast\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Work sharing\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"During operation, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"golangci-lint\"), \" shares work between specific linters (like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"golint\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"govet\"), \", etc.).\\nWe don't fork to call a specific linter, but instead use its API.\\nFor small and medium projects 50-90% of work between linters can be reused.\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"load \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[]*packages.Package\"), \" by \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"go/packages\"), \" once\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"We load program (parsing all files and type-checking) only once for all linters. For the most of linters\\nit's the most heavy operation: it takes 5 seconds on 8 kLoC repo and 11 seconds on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$GOROOT/src\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"build \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ssa.Program\"), \" once\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Some linters (megacheck, interfacer, unparam) work on SSA representation.\\nBuilding of this representation takes 1.5 seconds on 8 kLoC repo and 6 seconds on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$GOROOT/src\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"parse source code and build AST once\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Parsing one source file takes 200 us on average. Parsing of all files in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$GOROOT/src\"), \" takes 2 seconds.\\nCurrently we parse each file more than once because it's not the bottleneck. But we already save a lot of\\nextra parsing. We're planning to parse each file only once.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"walk files and directories once\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"It takes 300-1000 ms for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$GOROOT/src\"), \".\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Smart linters scheduling\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"We schedule linters by a special algorithm which takes estimated execution time into account. It allows\\nto save 10-30% of time when one of heavy linters (megacheck etc) is enabled.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Don't fork to run shell commands\"))), mdx(\"p\", null, \"All linters has their version fixed with go modules, they are builtin\\nand you don't need to install them separately.\"));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Memory Usage"},{"depth":2,"value":"Why golangci-lint is so fast"}]}},"pageContext":{"slug":"/product/performance/","prev":{"label":"Roadmap","link":"/product/roadmap/"},"next":{"label":"GitHub","link":"https://github.com/golangci/golangci-lint"},"githubEditUrl":"https://github.com/golangci/golangci-lint/tree/master/docs/src/docs/product/performance.mdx"}},"staticQueryHashes":["1954253342","2360221584","2501019404","2679457992"]}