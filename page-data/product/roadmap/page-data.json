{"componentChunkName":"component---src-rocketseat-gatsby-theme-docs-src-templates-docs-query-js","path":"/product/roadmap/","result":{"data":{"mdx":{"id":"b4554b1b-e4fc-5861-bf20-97f04a7ffb1a","excerpt":"üí° Feature Requests Please file an issue to suggest new features. Vote on feature requests by adding a üëç. This helps maintainers prioritize what to work on‚Ä¶","fields":{"slug":"/product/roadmap/"},"frontmatter":{"title":"Roadmap","description":null,"image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Roadmap\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"-feature-requests\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#-feature-requests\",\n    \"aria-label\": \" feature requests permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\uD83D\\uDCA1 Feature Requests\"), mdx(\"p\", null, \"Please file an issue to suggest new features. Vote on feature requests by adding a \\uD83D\\uDC4D. This helps maintainers prioritize what to work on.\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/golangci/golangci-lint/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+sort%3Areactions-%2B1-desc+label%3Aenhancement\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }, \"See Feature Requests\")), mdx(\"h2\", {\n    \"id\": \"-bugs\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#-bugs\",\n    \"aria-label\": \" bugs permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\uD83D\\uDC1B Bugs\"), mdx(\"p\", null, \"Please file an issue for bugs, missing documentation, or unexpected behavior.\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/golangci/golangci-lint/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3A%22bug%22+sort%3Acreated-desc\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }, \"See Bugs\")), mdx(\"h2\", {\n    \"id\": \"versioning-policy\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#versioning-policy\",\n    \"aria-label\": \"versioning policy permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Versioning Policy\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"golangci-lint\"), \" follows \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://semver.org\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }, \"semantic versioning\"), \". However, due to the nature of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"golangci-lint\"), \" as a code quality tool,\\nit's not always clear when a minor or major version bump occurs. To help clarify this for everyone, we've defined the following semantic versioning policy:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Patch release (intended to not break your lint build)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A patch version update in a specific linter that results in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"golangci-lint\"), \" reporting fewer errors.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A bug fix to the CLI or core (packages loading, runner, postprocessors, etc).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Improvements to documentation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Non-user-facing changes such as refactoring code, adding, deleting, or modifying tests, and increasing test coverage.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Re-releasing after a failed release (i.e., publishing a release that doesn't work for anyone).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Minor release (might break your lint build because of newly found issues)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A major or minor version update of a specific linter that results in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"golangci-lint\"), \" reporting more errors.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A new linter is added.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"An existing configuration option or linter is deprecated.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A new CLI command is created.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Backward incompatible change of configuration with extremely low impact, e.g. adding validation of a list of enabled \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"go-critic\"), \" checkers.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Major release (likely to break your lint build)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Backward incompatible change of configuration with huge impact, e.g. removing excluding issues about missed comments from \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"golint\"), \" by default.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A linter is removed.\")), mdx(\"p\", null, \"According to our policy, any minor update may report more errors than the previous release (ex: from a bug fix).\\nAs such, we recommend using the fixed minor version and fixed or the latest patch version to guarantee the results of your builds.\"), mdx(\"p\", null, \"For example, in our \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/golangci/golangci-lint-action\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }, \"GitHub Action\"), \" we require users to explicitly set the minor version of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"golangci-lint\"), \"\\nand we always use the latest patch version.\"), mdx(\"h2\", {\n    \"id\": \"linter-deprecation-cycle\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#linter-deprecation-cycle\",\n    \"aria-label\": \"linter deprecation cycle permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Linter Deprecation Cycle\"), mdx(\"p\", null, \"A linter can be deprecated for various reasons, e.g. the linter stops working with a newer version of Go or the author has abandoned its linter.\"), mdx(\"p\", null, \"The deprecation of a linter will follow 3 phases:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Display of a warning message\"), \": The linter can still be used (unless it's completely non-functional), but it's recommended to remove it from your configuration.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Display of an error message\"), \": At this point, you should remove the linter. The original implementation is replaced by a placeholder that does nothing.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Removal of the linter\"), \" from golangci-lint.\")), mdx(\"p\", null, \"Each phase corresponds to a minor version:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"v1.0.0 -> warning message\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"v1.1.0 -> error message\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"v1.2.0 -> linter removed\")), mdx(\"p\", null, \"The deprecated linters are removed from presets immediately when they are deprecated (phase 1).\"), mdx(\"p\", null, \"We will provide clear information about those changes on different supports: changelog, logs, social network, etc.\"), mdx(\"p\", null, \"We consider the removal of a linter as non-breaking changes for golangci-lint itself.\\nNo major version will be created when a linter is removed.\"), mdx(\"h2\", {\n    \"id\": \"future-plans\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#future-plans\",\n    \"aria-label\": \"future plans permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Future Plans\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Upstream all changes of forked linters.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Make it easy to write own linter/checker: it should take a minimum code, have perfect documentation, debugging and testing tooling.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Speed up SSA loading: on-disk cache and existing code profiling-optimizing.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Analyze (don't only filter) only new code: analyze only changed files and dependencies, make incremental analysis, caches.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Smart new issues detector: don't print existing issues on changed lines.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Minimize false-positives by fixing linters and improving testing tooling.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Automatic issues fixing (code rewrite, refactoring) where it's possible.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Documentation for every issue type.\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"üí° Feature Requests"},{"depth":2,"value":"üêõ Bugs"},{"depth":2,"value":"Versioning Policy"},{"depth":2,"value":"Linter Deprecation Cycle"},{"depth":2,"value":"Future Plans"}]}},"pageContext":{"slug":"/product/roadmap/","prev":{"label":"Changelog","link":"/product/changelog/"},"next":{"label":"Performance","link":"/product/performance/"},"githubEditUrl":"https://github.com/golangci/golangci-lint/tree/master/docs/src/docs/product/roadmap.mdx"}},"staticQueryHashes":["1954253342","2360221584","2501019404","2679457992"]}